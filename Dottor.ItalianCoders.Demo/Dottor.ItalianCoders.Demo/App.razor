@using Microsoft.AspNetCore.Components.WebAssembly.Services
@using System.Reflection;
@inject LazyAssemblyLoader assemblyLoader

<Router AppAssembly="@typeof(Program).Assembly" 
        PreferExactMatches="@true"
        AdditionalAssemblies="lazyLoadedAssemblies"
        OnNavigateAsync="@OnNavigateAsync" >
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
    </Found>
    <NotFound>
        <LayoutView Layout="@typeof(MainLayout)">
            <p>Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
    <Navigating>
        <div style="color: green">
            <p>Loading the requested page&hellip;</p>
        </div>
    </Navigating>
</Router>



@code {
    private List<Assembly> lazyLoadedAssemblies = new List<Assembly>();

    private async Task OnNavigateAsync(NavigationContext args)
    {
        try
        {
            IEnumerable<Assembly> assemblies = null;

            if (args.Path.ToLower().StartsWith("earthquake"))
            {
                assemblies = await assemblyLoader.LoadAssembliesAsync(
                       new List<string>() {
                            "Dottor.Earthquake.dll"
                               });
            }

            
            if (assemblies != null)
            {
                lazyLoadedAssemblies.AddRange(assemblies);
            }
        }
        catch (Exception ex)
        {

        }
    }
}