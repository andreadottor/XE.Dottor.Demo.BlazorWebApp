@page "/"

@inject JSONPlaceholderApiProxyService api
@inject JsFunctionService js
@inject Store Store
@inject AuthenticationStateProvider AuthenticationStateProvider

<h3>Elenco post</h3>

<input class="form-control" @bind="filterText" @bind:event="oninput" placeholder="Filtra per Tag" />

<hr />

@if (Store.Posts != null && Store.Posts.Any())
{
    @foreach (var p in filteredItems)
    {
        <Post Value="@p" OnTagClicked="TagClicked" />
    }
}
else
{
    <p>Nessun post presente</p>
}

<Loading Visible="Loading" />

@code {

    private IEnumerable<PostViewModel> filteredItems => string.IsNullOrEmpty(filterText) ? Store.Posts : Store.Posts.Where(p => p.Tags.Contains(filterText));
    private string filterText;
    private bool Loading { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var state = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var userName = state.User.Identity.Name;

        var list = await api.GetPostList();
        var tempJsData = await js.ReadInfo(userName);

        Store.Posts = list.Select(p => new PostViewModel(p, tempJsData[p.Id])).ToArray();
        Loading = false;
    }

    protected void TagClicked(string tag)
    {
        filterText = tag;
    }

}
