@page "/"

@using System.Net.Http
@inject HttpClient Http
@inject IJSRuntime JSRuntime;
@inject Store Store;

<h3>Elenco post</h3>

<input class="form-control" @bind="filterText" @bind:event="oninput" placeholder="Filtra per Tag" />

<hr />

@if (Store.Posts != null && Store.Posts.Any())
{
    @foreach (var p in filteredItems)
    {
        <Post Value="@p" />
    }
}
else
{
    <p>Nessun post presente</p>
}

<Loading Visible="loading" />

@code {
    // https://jsonplaceholder.typicode.com/posts

    const int userId = 1;

    //private PostViewModel[] items;
    private IEnumerable<PostViewModel> filteredItems => string.IsNullOrEmpty(filterText) ? Store.Posts : Store.Posts.Where(p => p.Tags.Contains(filterText));
    private string filterText;
    private bool loading = true;


    protected override async Task OnInitializedAsync()
    {
        var list = await Http.GetFromJsonAsync<PostDto[]>("https://jsonplaceholder.typicode.com/posts");
        var tempJsData = await JSRuntime.InvokeAsync<Dictionary<int, PostExtDto>>("readINFOS", userId);

        Store.Posts = list.Select(p => new PostViewModel(p, tempJsData[p.Id])).ToArray();
        loading = false;
    }


}
